{"version":3,"sources":["auth-test.js"],"names":["beforeEach","t","srv","context","url","user","getUser","options","method","body","username","password","json","token","decoded","verifyToken","secret","is"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,cAAKA,UAAL;AAAA,6CAAgB,WAAMC,CAAN,EAAW;AACzB,QAAIC,MAAM,qCAAV;AACAD,MAAEE,OAAF,CAAUC,GAAV,GAAgB,MAAM,0BAAOF,GAAP,CAAtB;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKA,mBAAK,eAAL;AAAA,8CAAsB,WAAMD,CAAN,EAAW;AAAA;AAAA;;AAC/B,QAAII,OAAO,mBAASC,OAAT,EAAX;AACA,QAAIF,MAAMH,EAAEE,OAAF,CAAUC,GAApB;AACA,QAAIG,UAAU;AACZC,cAAQ,MADI;AAEZJ,WAAKA,GAFO;AAGZK,YAAM;AACJC,kBAAUL,KAAKK,QADX;AAEJC,kBAAUN,KAAKM;AAFX,OAHM;AAOZC,YAAM;AAPM,KAAd;AASA,QAAIC,QAAQ,MAAM,8BAAQN,OAAR,CAAlB;AACA,QAAIO,UAAU,MAAM,gBAAMC,WAAN,CAAkBF,KAAlB,EAAyB,iBAAOG,MAAhC,CAApB;AACAf,MAAEgB,EAAF,uBAAK,0CAAQP,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAuB,wCAAKA,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAfD;;AAAA;AAAA;AAAA;AAAA","file":"auth-test.js","sourcesContent":["'use strict'\n\nimport test from 'ava'\nimport listen from 'test-listen'\nimport request from 'request-promise'\nimport users from '../users'\nimport micro from 'micro'\nimport fixtures from './fixtures/'\nimport config from '../config'\nimport utils from '../lib/utils'\n\ntest.beforeEach(async t => {\n  let srv = micro(users)\n  t.context.url = await listen(srv)\n})\n\ntest('sucess POST /', async t => {\n  let user = fixtures.getUser()\n  let url = t.context.url\n  let options = {\n    method: 'POST',\n    url: url,\n    body: {\n      username: user.username,\n      password: user.password\n    },\n    json: true\n  }\n  let token = await request(options)\n  let decoded = await utils.verifyToken(token, config.secret)\n  t.is(decoded.username, user.username)\n})\n"]}