{"version":3,"sources":["auth-test.js"],"names":["beforeEach","t","srv","context","url","user","getUser","options","method","body","username","password","json","token","decoded","verifyToken","secret","is"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,cAAKA,UAAL;AAAA,6CAAgB,WAAMC,CAAN,EAAW;AACzB,QAAIC,MAAM,qCAAV;AACAD,MAAEE,OAAF,CAAUC,GAAV,GAAgB,MAAM,0BAAOF,GAAP,CAAtB;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKA,mBAAK,eAAL;AAAA,8CAAsB,WAAMD,CAAN,EAAW;AAAA;AAAA;;AAC/B,QAAII,OAAO,mBAASC,OAAT,EAAX;AACA,QAAIF,MAAMH,EAAEE,OAAF,CAAUC,GAApB;AACA,QAAIG,UAAU;AACZC,cAAQ,MADI;AAEZJ,WAAKA,GAFO;AAGZK,YAAM;AACJC,kBAAUL,KAAKK,QADX;AAEJC,kBAAUN,KAAKM;AAFX,OAHM;AAOZC,YAAM;AAPM,KAAd;AASA,QAAIC,QAAQ,MAAM,8BAAQN,OAAR,CAAlB;AACA,QAAIO,UAAU,MAAM,gBAAMC,WAAN,CAAkBF,KAAlB,EAAyB,iBAAOG,MAAhC,EAAwC,EAAxC,CAApB;AACAf,MAAEgB,EAAF,uBAAK,0CAAQP,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAuB,wCAAKA,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAfD;;AAAA;AAAA;AAAA;AAAA","file":"auth-test.js","sourcesContent":["'use strict'\r\n\r\nimport test from 'ava'\r\nimport listen from 'test-listen'\r\nimport request from 'request-promise'\r\nimport users from '../users'\r\nimport micro from 'micro'\r\nimport fixtures from './fixtures/'\r\nimport config from '../config'\r\nimport utils from '../lib/utils'\r\n\r\ntest.beforeEach(async t => {\r\n  let srv = micro(users)\r\n  t.context.url = await listen(srv)\r\n})\r\n\r\ntest('sucess POST /', async t => {\r\n  let user = fixtures.getUser()\r\n  let url = t.context.url\r\n  let options = {\r\n    method: 'POST',\r\n    url: url,\r\n    body: {\r\n      username: user.username,\r\n      password: user.password\r\n    },\r\n    json: true\r\n  }\r\n  let token = await request(options)\r\n  let decoded = await utils.verifyToken(token, config.secret, {})\r\n  t.is(decoded.username, user.username)\r\n})\r\n"]}