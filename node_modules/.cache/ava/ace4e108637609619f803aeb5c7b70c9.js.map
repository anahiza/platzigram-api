{"version":3,"sources":["users-test.js"],"names":["beforeEach","t","srv","context","url","user","getUser","options","method","json","body","name","username","password","email","resolveWithFullResponse","response","is","statusCode","deepEqual"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,cAAKA,UAAL;AAAA,6CAAgB,WAAMC,CAAN,EAAW;AACzB,QAAIC,MAAM,qCAAV;AACAD,MAAEE,OAAF,CAAUC,GAAV,GAAgB,MAAM,0BAAOF,GAAP,CAAtB;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKA,mBAAK,QAAL;AAAA,8CAAe,WAAMD,CAAN,EAAW;AAAA;AAAA;AAAA;;AACxB,QAAII,OAAO,mBAASC,OAAT,EAAX;AACA,QAAIF,MAAMH,EAAEE,OAAF,CAAUC,GAApB;AACA,QAAIG,UAAU;AACZC,cAAQ,MADI;AAEZJ,WAAKA,GAFO;AAGZK,YAAM,IAHM;AAIZC,YAAM;AACJC,cAAMN,KAAKM,IADP;AAEJC,kBAAUP,KAAKO,QAFX;AAGJC,kBAAUR,KAAKQ,QAHX;AAIJC,eAAOT,KAAKS;AAJR,OAJM;AAUZC,+BAAyB;AAVb,KAAd;AAYA,WAAOV,KAAKS,KAAZ;AACA,WAAOT,KAAKQ,QAAZ;AACA,QAAIG,WAAW,MAAM,8BAAQT,OAAR,CAArB;AACAN,MAAEgB,EAAF,uBAAK,2CAASC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA0B,GAA1B;AACAjB,MAAEkB,SAAF,yBAAY,4CAAST,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA2BL,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GApBD;;AAAA;AAAA;AAAA;AAAA;;AAsBA,mBAAK,gBAAL;AAAA,8CAAuB,WAAMJ,CAAN,EAAW;AAAA;AAAA;;AAChC,QAAII,OAAO,mBAASC,OAAT,EAAX;AACA,QAAIF,MAAMH,EAAEE,OAAF,CAAUC,GAApB;AACA,QAAIG,UAAU;AACZC,cAAQ,KADI;AAEZJ,WAAM,IAAEA,GAAI,MAAGC,KAAKO,QAAS,GAFjB;AAGZH,YAAM;AAHM,KAAd;AAKA,QAAIC,OAAO,MAAM,8BAAQH,OAAR,CAAjB;AACA,WAAOF,KAAKS,KAAZ;AACA,WAAOT,KAAKQ,QAAZ;AACAZ,MAAEkB,SAAF,yBAAYT,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkBL,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAZD;;AAAA;AAAA;AAAA;AAAA","file":"users-test.js","sourcesContent":["'use strict'\r\n\r\nimport test from 'ava'\r\nimport listen from 'test-listen'\r\nimport request from 'request-promise'\r\nimport users from '../users'\r\nimport micro from 'micro'\r\nimport fixtures from './fixtures/'\r\n\r\ntest.beforeEach(async t => {\r\n  let srv = micro(users)\r\n  t.context.url = await listen(srv)\r\n})\r\n\r\ntest('POST /', async t => {\r\n  let user = fixtures.getUser()\r\n  let url = t.context.url\r\n  let options = {\r\n    method: 'POST',\r\n    url: url,\r\n    json: true,\r\n    body: {\r\n      name: user.name,\r\n      username: user.username,\r\n      password: user.password,\r\n      email: user.email\r\n    },\r\n    resolveWithFullResponse: true\r\n  }\r\n  delete user.email\r\n  delete user.password\r\n  let response = await request(options)\r\n  t.is(response.statusCode, 201)\r\n  t.deepEqual(response.body, user)\r\n})\r\n\r\ntest('GET /:username', async t => {\r\n  let user = fixtures.getUser()\r\n  let url = t.context.url\r\n  let options = {\r\n    method: 'GET',\r\n    url: `${url}/${user.username}`,\r\n    json: true\r\n  }\r\n  let body = await request(options)\r\n  delete user.email\r\n  delete user.password\r\n  t.deepEqual(body, user)\r\n})\r\n"]}